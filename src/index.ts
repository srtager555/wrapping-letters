// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&####&@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##########@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#############@@@@@@@@@@@@@@@@@@@@@@
// %&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&################@@@@@@@@@@@@@@@@@@@@@@
// ########%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##################%@@@@@@@@@@@@@@@@@@@@@@
// #############%@@@@@@@@@@@@@@@@@@@@@@&###################%&@@@@@@@@@@@@@@@@@@@@@@
// #################&@@@@@@@@@&&&%&&@&&&%##################&&#@@@@@@@@@@@@@@@@@@@@@
// #################%@####################################&&*/@@@@@@@@@@@@@@@@@@@@@
// ###############################################%&%###%&&*,/@@@@@@@@@@@@@@@@@@@@@
// &########%&%###########################%############&&%,,,/@@@@@@@@@@@@@@@@@@@@@
// ,#&%###%&%###############################%#############%%&%@@@@@@@@@@@@@@@@@@@@@
// ,,,/&&%####(############%#################&%##################%%%%%##&@@@@@@@@@@
// ,*%&%#####/////(/#(/####%##//#%(/(########%&#######################%@@@@@@@@@@@@
// &%#########((#%######%&/*&##%#############%&%#####################@@@@@@@@@@@@@@
// ###################%&*...*&%##############%&**%&@@#############&@@@@@@@@@@@@@@@@
// ################%&(..%@,   %&%############%&, /@@@&%&&&%%&%@@@@@@@@@@@@@@@@@@@@@
// ############%&%,.*//@@&      (&%##########%&*@%    .@@#   (@@@@@@@@@@@@@@@@@@@@@
// ########&&&/.(@@&.  (@@*        .%&&%%####%&#@*       %@*  *@@@@@@@@@@@@@@@@@@@@
// @@@@&&%%.  ,@@*      ,@@,              *(#%(,@#       .@#    @@@@@@@@@@@@@@@@@@(
// &&@%##%#   &@,       /@@                     .@@*    /@@.     @@@@@@@@@@@@@@&(,,
// &@%###%(  .@@/     .@@&.                   .#(  *&@@&,  .      &@@@@@@@@@@@(/...
// @&####&*   ,@@@@@@@@%   .#*       *#*      /#/             .(##&@@@@@@@@@@@#*
// @%###%&,   *(#           .###/*###/ ,######(           /#/.    &@@@@%%@@@@@#/..,
// %####%%###/      /                                   *#,  .##%@@(.    .,.   ,((/
// ######@@.   ,#(#                                       ,##/#@&%           ***
// ######&@@@&(#,   .#/                                    #@@&#%&...,,,*****,,,...
// #######@@&&@@% *##.                                ,%@@@&####%&,................
// %#######&@&&&&&@@@@@#*                    ,#@@@@@@@&&&&@%####%@*,,,,,,,*,,,,,,,,
// &@#######%@@&&&@#*/@@@@@@@@@@@@@@@@@@@@@@(     /@@&&&&@%#####&&(*,,,,,,,,,,,,,,,
// &&&@@@%####%@@& /@*       .  (@(***,%@,      .#  (@&&@&&@@@%##@@%#((((((((((((((

import { __values_identifier__ } from "./errors/valuesIdentifier.error";

export function wrapping_letter(props: WLProps): WrappingLetters {
  // checking errors in the props
  __values_identifier__({
    valuesToCheck: props,
    correctValues: { name: "WL", values: ["text", "textOptions"] },
  });

  const { text = "Â¡Hola Mundo! )w)", textOptions = {} } = props;

  return {
    text: "Hola",
    classes: "this is the first version of the WL engine",
    wrapping: "thanks to read this :D",
  };
}
